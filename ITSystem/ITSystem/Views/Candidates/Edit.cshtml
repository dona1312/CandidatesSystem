@model ITSystem.ViewModels.Candidates.CandidateEditVM
@Styles.Render("~/Content/css")
@{
    ViewBag.Title = Model.Id > 0 ? "Edit candidate" : "Create candidate";
}

<div class="wrapper">

    <h4>@ViewBag.Title</h4>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                   
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                @Html.LabelFor(model => model.Skills, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    <table>
                        @for (int i = 0; i < Model.Skills.Count; i++)
                        {
                            <tr>
                                <td>@Html.DisplayFor(model => model.Skills[i].ProgrammingLanguage.Name);</td>
                                <td>@Html.ActionLink("Add", "Add", new { id = Model.Skills[i].Id }) | @Html.ActionLink("Delete", "Delete", new { id = Model.Skills[i].Id })</td>
                                
                            </tr>
                            <tr>
                                <td>@Html.DisplayFor(model => model.Skills[i].UsedTechnology.Name);</td>
                                <td>@Html.ActionLink("Add", "Add", new { id = Model.Skills[i].Id }) | @Html.ActionLink("Delete", "Delete", new { id = Model.Skills[i].Id })</td>

                            </tr>
                        }
                    </table>
                </div>
            </div>*@

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-primary" />
                </div>
            </div>
        </div>
    }
    <div>
        @Html.ActionLink("Back to List", "List")
        @Scripts.Render("~/bundles/jquery")
        @Scripts.Render("~/bundles/bootstrap")
    </div>
</div>